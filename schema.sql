CREATE TABLE users (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    email TEXT UNIQUE,
    password TEXT,
    role TEXT DEFAULT 'CLIENT' CHECK (role IN ('ADMIN', 'OWNER', 'CLIENT')) 
);

CREATE TABLE bussiness (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    email TEXT,
    phone TEXT NOT NULL,
    slug TEXT NOT NULL,
    address TEXT NOT NULL,
    description TEXT NOT NULL,
    status TEXT NOT NULL DEFAULT 'IN REVIEW' CHECK (status IN ('APPROVED', 'REJECTED', 'IN REVIEW')),
    address TEXT NOT NULL,
    rif TEXT NOT NULL,
    lat DECIMAL(8,6) NOT NULL,
    lon DECIMAL(9,6) NOT NULL,
    city TEXT NOT NULL,
    user_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE brands (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    status TEXT NOT NULL DEFAULT 'IN REVIEW' CHECK (status IN ('APPROVED', 'REJECTED', 'IN REVIEW')),
    name TEXT NOT NULL,
    slug TEXT NOT NULL,
    country TEXT NOT NULL
);

CREATE TABLE products (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL, 
    description TEXT NOT NULL,
    status TEXT NOT NULL DEFAULT 'IN REVIEW' CHECK (status IN ('APPROVED', 'REJECTED', 'IN REVIEW')),
    slug TEXT NOT NULL,
    brand_id INTEGER DEFAULT NULL,
    FOREIGN KEY (brand_id) REFERENCES brands(id) ON DELETE CASCADE
);

CREATE TABLE ratings (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    score FLOAT CHECK (score BETWEEN 0 AND 5),
    comment TEXT,
    user_id INTEGER NOT NULL,
    bussiness_id INTEGER DEFAULT NULL,
    product_id INTEGER DEFAULT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (bussiness_id) REFERENCES bussiness(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
);

CREATE TABLE stocks (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    quantity INTEGER DEFAULT 0,
    price FLOAT,
    discount FLOAT DEFAULT 0 CHECK (discount < 100 AND discount >= 0) ,
    product_id INTEGER NOT NULL,
    bussiness_id INTEGER NOT NULL,
    FOREIGN KEY (bussiness_id) REFERENCES bussiness(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE,
    CONSTRAINT unique_product_bussiness UNIQUE (product_id, bussiness_id)
);


CREATE TABLE lists (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE lists_stocks (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    list_id INTEGER NOT NULL,
    stock_id INTEGER NOT NULL,
    FOREIGN KEY (list_id) REFERENCES lists(id) ON DELETE CASCADE,
    FOREIGN KEY (stock_id) REFERENCES stocks(id) ON DELETE CASCADE,
    CONSTRAINT unique_list_stock UNIQUE (list_id, stock_id)
);

-- CREATE TABLE promotions (
--     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     id INTEGER PRIMARY KEY AUTOINCREMENT,
--     discount INTEGER NOT NULL,
--     stock_id INTEGER NOT NULL,
--     FOREIGN KEY (stock_id) REFERENCES stocks(id) ON DELETE CASCADE
-- );

CREATE TABLE tags (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    status TEXT NOT NULL DEFAULT 'IN REVIEW' CHECK (status IN ('APPROVED', 'REJECTED', 'IN REVIEW'))
);

CREATE TABLE images (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    blob BLOB NOT NULL
);

CREATE TABLE tags_bussiness (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    bussiness_id INTEGER NOT NULL,
    tag_id INTEGER NOT NULL,
    FOREIGN KEY (bussiness_id) REFERENCES bussiness(id) ON DELETE CASCADE,
    FOREIGN KEY (tag_id) REFERENCES tags(id) ON DELETE CASCADE
);

CREATE TABLE tags_products (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    tag_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    FOREIGN KEY (tag_id) REFERENCES tags(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
);

CREATE TABLE images_bussiness (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    bussiness_id INTEGER NOT NULL,
    image_name TEXT NOT NULL,
    image_path TEXT NOT NULL,
    FOREIGN KEY (bussiness_id) REFERENCES bussiness(id) ON DELETE CASCADE
);

CREATE TABLE images_products (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    product_id INTEGER NOT NULL,
    image_name TEXT NOT NULL,
    image_path TEXT NOT NULL,
    FOREIGN KEY (product_id) REFERENCES bussiness(id) ON DELETE CASCADE
);

CREATE TABLE images_brands (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    brand_id INTEGER NOT NULL,
    image_name TEXT NOT NULL,
    image_path TEXT NOT NULL,
    FOREIGN KEY (brand_id) REFERENCES brands(id) ON DELETE CASCADE
);

CREATE TABLE documents_bussiness (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    bussiness_id INTEGER NOT NULL,
    image_name TEXT NOT NULL,
    image_path TEXT NOT NULL,
    FOREIGN KEY (bussiness_id) REFERENCES bussiness(id) ON DELETE CASCADE,
);

CREATE TABLE documents_owners (
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
     id INTEGER PRIMARY KEY AUTOINCREMENT,
    bussiness_id INTEGER NOT NULL,
    image_id INTEGER NOT NULL,
    FOREIGN KEY (bussiness_id) REFERENCES bussiness(id) ON DELETE CASCADE,
    FOREIGN KEY (image_id) REFERENCES images(id) ON DELETE CASCADE
);



-- CREATE TABLE (
--     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--      id INTEGER PRIMARY KEY AUTOINCREMENT,
-- )